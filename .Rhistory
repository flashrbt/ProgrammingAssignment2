demo(smooth)
demo()
demo(Hershey)
demo(colors)
demo(plotmath)
demo()
source("http://bioconductor.org/biocLite.R")
biocLite()
demo(RSQLite)
exit
quit()
getwd()
ls
dir()
getwd
getwd()
dir()
getwd()
dir()
x<-1
print(x)
x
msg-<'hi,nihao'
msg<-'hi, hhi'
msg
class(x)
class(msg)
y<-(4,5,6)
y<-[4,5,6]
y<-4:8
y
class(y)
z<-3L
z
class(z)
attributes(z)
Attributes(z)
attributes(y)
aa<-c(0.5,0.6)
aa
class(a)
class(aa)
bb<-c("a","b","c")
bb
class(bb)
yy<-("a",TRUE)
yy<-c("a",TRUE)
yy
yy<-c(2,TRUE)
yy
yy<-(1,"a")
yy<-c(1,"a")
yy
quit()
library(swirl)
swirl()
1:20
pi:10
15:1
`:`
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name<-c(my_char,"CQ")
my_name
paste(my_name, collapse=" ")
paste("Hello","world!",sep=" ")
paste(1:3,c("X","Y","Z"),sep=" ")
paste(c(1:3),c("X","Y","Z"),sep=" ")
paste(c(1:3),c("X","Y","Z"),sep="")
paste(LETTERS, 1:4, sep="-")
quit()
library(swirl)
swirl()
ex()
q()
library(swirl)
swirl()
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x.0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[300]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
name(vect)
names(vect)
vect2<-c(11,2,NA)
names(vect)<-c("foo","bar","norf")
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(cnames,my_data)
colnames(cnames,my_data)
cnames
colnames(my_data)<-cnames
my_data
quit()
y<-10
f<-function(x){
y<-2
y^2+g(x)
}
g<-function(x){
x*y
}
f(3)
sys.time
sys.time()
Sys.time()
cub3<-function(x,n){
x^3
}
cube(3)
cub3(3)
ls()
my_matrix
rm()
ls
ls()
group
quit
?quit
quit(yes)
quit('yes')
for(i in 1:10){
print(i)
}
c<-c('a','b','c','d')
seq_along(c)
?seq_along
q(0
q
q('yes')
source(swirl"
)
)
'
)
source('swirl')
library('swirl')
swirl
swirl()
quit()
library("swirl")
swirl()
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
(5==7)==!TRUE
5==7
!(5==7)
FALSE&FALSE
TRUE&c(TRUE,FALSE,FALSE)
TRUE&&c(TRUE,FALSE,FALSE)
TRUE|c(TRUE, FALSE,FALSE)
TRUE||c(TRUE, FALSE,FALSE)
5>8||6!=8&&4>3.9
isTRUE(6>4)
identical('twins
','twins')
identical('twins','twins')
xor(5==6,!FALSE)
ints<sample(10)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.date()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
reminder(5)
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
temainder(4,div=2)
remainder(4,div=2)
args(remainder)
submit()
evaluate(std(c(1.4,3.6,7.9,8.8)))
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste('Programmming','is','fun!')
paset("Programming", "is", fun!")
paset("Programming", "is", "fun!")
pasts("Programming", "is", "fun!")
paste("Programming", "is", "fun!")
submit()
submit()
submit()
submit()
telegram("good","morning")
submit()
submit()
mad_libs(place="NY",adjective="like",noun="Tom")
submit()
"I"%p%"love"%p%"R!"
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.DAte("1969-01-01")
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
strptime(t3, "%b %d, %Y %H:%M")
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(), t1, units='days')
exit
ex()
quit()
y<-10
f<-function(x){}
f<-function(x){y<-2}
y<-10
f<-function(x){
y<-2
y^2+g(x)
}
g<-function(x){
x*y}
f(3)
g(3)
quit("yes")
swirl
library("swirl")
rm(list=ls())
swirl()
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags,class)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$organe)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6)
)
unique_vals<-lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeirc(1))
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flgs$animate)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population, flags$red,summary)
tapply(flags$population,flags$landmass,summary)
infor()
info()
main()
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$dist,y=cars$speed)
plot(y=cars$dist,x=cars$speed)
main()
quit("yes")
library(datasets)
data(iris)
?iris
iris
head(iris)
tapply(iris$Sepal.Length,iris$Species,mean)
apply(iris[,[1:4],1,mean)
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
tapply(mtcars$hp,mtcars$cyl,mean)
209.21429-82.63636
debug(ls)
ok()
ls
debug(ls)
ls()
quit("yes")
library('swirl')
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
heas(plants)
head(plants)
head(plants,10)
tail(plants)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20,10)
letters
LETTERS
sample(LETTERS)
flips<-sample(c(0,1),100,replace = TRUE,prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
flips2<-rbinom(100,1,prob=0.7)
flips2
sum(flips2)
?rnorm()
?rnorm
rnorm(10)
rnorm(10,100,25)
?rpois
rpois(5,10)
replicate(100,rpois(5,10))
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed,y=cars$dist)
plot(x=cars$dist,y=cars$speed)
plot()
plot(cars)
plot(x=cars$speed,y=cars$dist,xlab="Speed")
plot(x=cars$speed,y=cars$dist,ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(cars,main="My Plot")
plot(cars,sub="My Plot Subtitle")
?par
plot(cars,col=2)
plot(cars, xlim=c(10,15))
plot(cars,pch=2)
data(mtcars)
?boxplot
boxplot(formula=mpg~cyl,data=mtcars)
hist(mtcars$mpg)
set.seed(1)
rpois(5,2)
set.seed(1)
rpois(5,2)
library(datasets)
data("iris")
?iris
summary(iris)
tapply(iris$Sepal.Length,iris$Species,mean)
apply(iris[,1:4],1,mean)
apply(iris,2,mean)
apply(iris[,1:4],2,mean)
library(datasets)
data("mtcars")
?mtcars
summary(mtcars)
head(mtcars)
sapply(mtcars,cyl,mean)
with(mtcars,tapply(mpg,cyl,mean))
sapply(split(mtcars$mpg,mtcars$cyle),mean)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
tapply(mtcars$mpg,mtcars$cyl,mean)
apply(mtcars,2,mean)
tapply(mtcars$hp,mtcars$cyl,mean)
209.21-82.636
?apply
quit()
hilbert <- function(n) { i <- 1:n; 1 / outer(i - 1, i, "+") }
h8 <- hilbert(8); h8
sh8 <- solve(h8)
round(sh8 %*% h8, 3)
sh8
A <- hilbert(4)
A[] <- as.complex(A)
## might not be supported on all platforms
try(solve(A))
solve(A)
A
solvea<-solve(A)
solvea%*%A
round(solvea%*%A,3)
exit
quit("yes")
x=matrix()
x
class(x)
y=numeric()
y
class(y)
setwd("C:/CQLi/CQ-repo-git/ProgrammingAssignment2")
getwd()
